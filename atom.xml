<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-29T07:57:36.561Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>test</title>
    <link href="http://yoursite.com/2019/08/29/test/"/>
    <id>http://yoursite.com/2019/08/29/test/</id>
    <published>2019-08-29T07:55:58.000Z</published>
    <updated>2019-08-29T07:57:36.561Z</updated>
    
    <content type="html"><![CDATA[<h2 id="test测试"><a href="#test测试" class="headerlink" title="test测试"></a>test测试</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;test测试&quot;&gt;&lt;a href=&quot;#test测试&quot; class=&quot;headerlink&quot; title=&quot;test测试&quot;&gt;&lt;/a&gt;test测试&lt;/h2&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sudo</title>
    <link href="http://yoursite.com/2019/08/29/sudo/"/>
    <id>http://yoursite.com/2019/08/29/sudo/</id>
    <published>2019-08-29T07:52:57.000Z</published>
    <updated>2019-08-29T07:52:57.264Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mszj</title>
    <link href="http://yoursite.com/2019/08/26/mszj/"/>
    <id>http://yoursite.com/2019/08/26/mszj/</id>
    <published>2019-08-26T08:32:52.000Z</published>
    <updated>2019-08-26T09:34:59.827Z</updated>
    
    <content type="html"><![CDATA[<!--[TOC]--><h2 id="简单的一些linux面试题"><a href="#简单的一些linux面试题" class="headerlink" title="简单的一些linux面试题"></a>简单的一些linux面试题</h2><a id="more"></a><h4 id="1-MySQL主从同步原理说明，查询主从同步的命令"><a href="#1-MySQL主从同步原理说明，查询主从同步的命令" class="headerlink" title="1. MySQL主从同步原理说明，查询主从同步的命令"></a>1. MySQL主从同步原理说明，查询主从同步的命令</h4><ul><li><p>开启binlog后，主库会生成一个 log dump 线程，用来给从库I/O线程传binlog;</p></li><li><p>开启slave后，从库生成两个线程，一个I/O线程，一个SQL线程;</p></li><li><p>I/O线程会去请求主库的binlog，并将得到的binlog日志写到relay log（中继日志） 文件中;</p></li><li><p>SQL线程会去读取relay log文件中的日志，并解析成具体操作，来实现主从的操作一致，而最终数据一致;</p></li><li><p><strong><em>查询主从同步的命令是: show slave status\G;</em></strong></p></li></ul><h4 id="2-主从同步的方式有哪些"><a href="#2-主从同步的方式有哪些" class="headerlink" title="2. 主从同步的方式有哪些"></a>2. 主从同步的方式有哪些</h4><h4 id="3-查看8080端口是否打开的是哪个服务"><a href="#3-查看8080端口是否打开的是哪个服务" class="headerlink" title="3. 查看8080端口是否打开的是哪个服务"></a>3. 查看8080端口是否打开的是哪个服务</h4><ul><li><strong><em>ss -luntp|grep  8080</em></strong></li></ul><h4 id="4-开发要查看tomcat的日志，但是太大了，不能用vim的方式，你怎么办"><a href="#4-开发要查看tomcat的日志，但是太大了，不能用vim的方式，你怎么办" class="headerlink" title="4. 开发要查看tomcat的日志，但是太大了，不能用vim的方式，你怎么办"></a>4. 开发要查看tomcat的日志，但是太大了，不能用vim的方式，你怎么办</h4><ul><li><p>问开发所需要日志的具体时间范围</p></li><li><p>通过sed取出日志并追加进新的文件，这样就能看到具体某时间段的日志sed -n ‘/2019-08-26 13:35:/,/2019-08-26 14:10:/p’ catalina.out &gt; 01.txt</p></li><li><p>还有第二种方法，一般这种情况可能是存在bug页面报错等情况，这时执行 tailf catalina.out &gt; 02.txt 让测试或开发还原报错过程，这样生成的日志更简短。</p></li></ul><h4 id="5-用户不能访问你的网站，但是你测试发现是可以的，然后你怎么排查"><a href="#5-用户不能访问你的网站，但是你测试发现是可以的，然后你怎么排查" class="headerlink" title="5. 用户不能访问你的网站，但是你测试发现是可以的，然后你怎么排查"></a>5. 用户不能访问你的网站，但是你测试发现是可以的，然后你怎么排查</h4><p>这里回答的可能不是很好哦。</p><ul><li>1.检查服务日志看是否有报错</li><li>2.联系用户看是否可以正常访问百度等网站</li><li>3.查看用户的DNS、网关和hosts文件是否有更改</li><li>4.查看服务器端的防火墙是否设置IP段不能访问</li><li>5.暂时打开服务器ping的功能，看用户端是否能够ping的通服务器。</li></ul><h4 id="6-定时任务-11月的每天早上6点至12点执行一个脚本"><a href="#6-定时任务-11月的每天早上6点至12点执行一个脚本" class="headerlink" title="6. 定时任务 11月的每天早上6点至12点执行一个脚本"></a>6. 定时任务 11月的每天早上6点至12点执行一个脚本</h4><ul><li><strong>00 6,8,10,12 * 11 * /bin/bash /home/root/test.sh &gt;/home/root/test.log &gt; 2&gt;&amp;1</strong></li><li><strong>00 6-12/2 * 11 * /bin/bash /home/root/test.sh &gt;/home/root/test.log &gt; 2&gt;&amp;</strong></li></ul><h4 id="7-binlog日志有那两种方式"><a href="#7-binlog日志有那两种方式" class="headerlink" title="7. binlog日志有那两种方式"></a>7. binlog日志有那两种方式</h4><h4 id="8-查看服务器硬件使用信息的命令"><a href="#8-查看服务器硬件使用信息的命令" class="headerlink" title="8. 查看服务器硬件使用信息的命令"></a>8. 查看服务器硬件使用信息的命令</h4><ul><li><strong>top</strong></li><li><strong>uptime</strong></li><li><strong>free -m</strong></li><li><strong>df -h</strong></li></ul><h4 id="9-keeplaviled的原理，用的什么协议"><a href="#9-keeplaviled的原理，用的什么协议" class="headerlink" title="9.  keeplaviled的原理，用的什么协议"></a>9.  keeplaviled的原理，用的什么协议</h4><blockquote><p>keepalived是以VRRP协议为实现基础的，VRRP全称Virtual Router Redundancy Protocol，即虚拟路由冗余协议。<br>虚拟路由冗余协议，可以认为是实现路由器高可用的协议，即将N台提供相同功能的路由器组成一个路由器组，这个组里面有一个master和多个backup，master上面有一个对外提供服务的vip（该路由器所在局域网内其他机器的默认路由为该vip），master会发组播，当backup收不到vrrp包时就认为master宕掉了，这时就需要根据VRRP的优先级来选举一个backup当master。这样的话就可以保证路由器的高可用了。<br>keepalived主要有三个模块，分别是core、check和vrrp。core模块为keepalived的核心，负责主进程的启动、维护以及全局配置文件的加载和解析。check负责健康检查，包括常见的各种检查方式。vrrp模块是来实现VRRP协议的。</p></blockquote><h4 id="10-mysql备份test库-并还原test库-命令"><a href="#10-mysql备份test库-并还原test库-命令" class="headerlink" title="10. mysql备份test库 并还原test库 命令"></a>10. mysql备份test库 并还原test库 命令</h4><ul><li><strong>mysqldump -u用户名 -p密码 test &gt; /home/root/test.sql</strong></li><li><strong>mysql -u用户名 -p密码 &lt; /home/root/test.sql</strong></li></ul><h4 id="11-mysql备份的时候-你用到了什么参数（除了-u-p-h）"><a href="#11-mysql备份的时候-你用到了什么参数（除了-u-p-h）" class="headerlink" title="11.mysql备份的时候 你用到了什么参数（除了-u -p -h）"></a>11.mysql备份的时候 你用到了什么参数（除了-u -p -h）</h4><ul><li>–add-drop-table：在每个创建数据库表语句前添加删除数据库表的语句；</li><li>–add-locks：备份数据库表时锁定数据库表；</li><li>–all-databases：备份MySQL服务器上的所有数据库；</li><li>–comments：添加注释信息；</li><li>–compact：压缩模式，产生更少的输出；</li><li>–complete-insert：输出完成的插入语句；</li><li>–databases：指定要备份的数据库；</li><li>–default-character-set：指定默认字符集；</li><li>–force：当出现错误时仍然继续备份操作；</li><li>–host：指定要备份数据库的服务器；</li><li>–lock-tables：备份前，锁定所有数据库表；</li><li>–no-create-db：禁止生成创建数据库语句；</li><li>–no-create-info：禁止生成创建数据库库表语句；</li></ul><h4 id="12-sed删除单数行"><a href="#12-sed删除单数行" class="headerlink" title="12.sed删除单数行"></a>12.sed删除单数行</h4><ul><li><strong>sed -i ‘1~2d’ filename</strong></li><li><strong>附送一个 awk的解决方法 awk ‘NR%2==0’ sed.txt</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!--[TOC]--&gt;
&lt;h2 id=&quot;简单的一些linux面试题&quot;&gt;&lt;a href=&quot;#简单的一些linux面试题&quot; class=&quot;headerlink&quot; title=&quot;简单的一些linux面试题&quot;&gt;&lt;/a&gt;简单的一些linux面试题&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Lftp+Sftp传输大文件</title>
    <link href="http://yoursite.com/2019/08/23/lftp+sftp/"/>
    <id>http://yoursite.com/2019/08/23/lftp+sftp/</id>
    <published>2019-08-23T08:58:34.000Z</published>
    <updated>2019-08-26T08:12:30.746Z</updated>
    
    <content type="html"><![CDATA[<!--[TOC]--><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><p>因为备份数据的不断扩大，需要把现网备份的数据（2T左右）传回到本地进行异地保存。但是2T太大了，需要进行压缩，这里采用了3G一个压缩包的方式。以下是压缩脚本</p><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此脚本是全量压缩mongodb备份的文件</span></span><br><span class="line">printf "开始mongodb备份压缩    $(date  +%Y%m%d_%A_%Z%T)\n"</span><br><span class="line">cd /data_master/backup/</span><br><span class="line">tar czf - picdb | split -b 3072m - picdb.tar.gz</span><br><span class="line">if [ $? != 0 ]</span><br><span class="line">    then</span><br><span class="line">printf "mongodb备份压缩失败    $(date  +%Y%m%d_%A_%Z%T)\n"</span><br><span class="line">    else</span><br><span class="line">printf "mongodb备份压缩完成    $(date  +%Y%m%d_%A_%Z%T)\n"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo "剩余容量: `df -h |awk -F '[ ]+' 'NR==7&#123;print $4&#125;'`"</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/08/26/aSNUz9phrke3jc5.png" alt="3G一个.png"><br>压缩完的结果就是上图一样，只是个数较多。<br>接下来的问题是：现网网络带宽有限，如何把这些压缩包传回到本地。这里采用的 早上6点至晚上10点，进行限速传（限速500KB/s），晚上10点后至早上6点采取不限速。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># SFTP传输脚本</span><br><span class="line"># IP地址</span><br><span class="line">IP=本地IP</span><br><span class="line"># PORT端口</span><br><span class="line">PORT=本地端口号</span><br><span class="line"># USER用户名</span><br><span class="line">USER=本地用户</span><br><span class="line"># PASSWD密码</span><br><span class="line">PASSWD=用户密码</span><br><span class="line">#压缩包所在目录</span><br><span class="line">CLIENTDIR=/data_master/backup/</span><br><span class="line">#SFTP服务器待下载目录</span><br><span class="line">SEVERDIR=/sftp/data_master/</span><br><span class="line"># 设置当前小时</span><br><span class="line"># xiaoshi=`date  +&quot;%Y-%m-%d %H:%M.%S&quot;|awk -F &quot;[ :]+&quot; &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">#待下载文件名</span><br><span class="line"># FILE=</span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">xiaoshi=`date  +&quot;%Y-%m-%d %H:%M.%S&quot;|awk -F &quot;[ :]+&quot; &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">if [ $&#123;xiaoshi&#125; -ge 6 ] &amp;&amp; [ $&#123;xiaoshi&#125; -lt 22 ];</span><br><span class="line">    then</span><br><span class="line">        echo &quot;大于6时并小于22时，应该执行限速&quot;</span><br><span class="line">File=`head -1 /home/lsy/Sftp.txt`</span><br><span class="line"></span><br><span class="line">printf &quot;开始传输压缩备份    $(date  +%Y%m%d_%A_%Z%T)\n&quot; &gt;&gt;/home/lsy/sftp_file.log</span><br><span class="line">cd $&#123;CLIENTDIR&#125;</span><br><span class="line">lftp -u 用户,密码 sftp://本地IP地址:端口号 &lt;&lt; EOF</span><br><span class="line">cd $&#123;SEVERDIR&#125;</span><br><span class="line">lcd $&#123;CLIENTDIR&#125;</span><br><span class="line">set net:limit-rate 500000:500000</span><br><span class="line">reput $&#123;File&#125;</span><br><span class="line">by</span><br><span class="line">EOF</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">    then</span><br><span class="line">        echo &quot;传输成功。下面是文件名&quot; &gt;&gt;/home/lsy/sftp_file.log</span><br><span class="line">        echo $&#123;File&#125; &gt;&gt;/home/lsy/sftp_file.log</span><br><span class="line">        sleep 3</span><br><span class="line">    else</span><br><span class="line">        echo &quot;传输失败。&quot; &gt;&gt;/home/lsy/sftp_file.log</span><br><span class="line">        sleep 5</span><br><span class="line">        exit 2</span><br><span class="line">fi</span><br><span class="line">sed -i 1d /home/lsy/Sftp.txt</span><br><span class="line">printf &quot;传输完成    $(date  +%Y%m%d_%A_%Z%T)\n&quot; &gt;&gt;/home/lsy/sftp_file.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">    echo &quot;取消限速&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">File=`head -1 /home/lsy/Sftp.txt`</span><br><span class="line"></span><br><span class="line">printf &quot;开始传输压缩备份    $(date  +%Y%m%d_%A_%Z%T)\n&quot; &gt;&gt;/home/lsy/sftp_file.log</span><br><span class="line">cd $&#123;CLIENTDIR&#125;</span><br><span class="line">lftp -u 用户,密码 sftp://本地IP:端口 &lt;&lt; EOF</span><br><span class="line">cd $&#123;SEVERDIR&#125;</span><br><span class="line">lcd $&#123;CLIENTDIR&#125;</span><br><span class="line">reput $&#123;File&#125;</span><br><span class="line">by</span><br><span class="line">EOF</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">    then</span><br><span class="line">        echo &quot;传输成功。下面是文件名&quot; &gt;&gt;/home/lsy/sftp_file.log</span><br><span class="line">        echo $&#123;File&#125; &gt;&gt;/home/lsy/sftp_file.log</span><br><span class="line">        sleep 3</span><br><span class="line">    else</span><br><span class="line">        echo &quot;传输失败。&quot; &gt;&gt;/home/lsy/sftp_file.log</span><br><span class="line">        sleep 5</span><br><span class="line">        exit 2</span><br><span class="line">fi</span><br><span class="line">sed -i 1d /home/lsy/Sftp.txt</span><br><span class="line">printf &quot;传输完成    $(date  +%Y%m%d_%A_%Z%T)\n&quot; &gt;&gt;/home/lsy/sftp_file.log</span><br><span class="line">fi</span><br><span class="line">done </span><br><span class="line">curl -s &quot;钉钉机器人&quot; -H &quot;Content-Type: application/json&quot; -d &quot;&#123;&apos;msgtype&apos;: &apos;text&apos;, &apos;text&apos;: &#123;&apos;content&apos;: \&quot;$(date +%Y%m%d-%H%M%S)：$(cat /home/lsy/sftp_file.log)\&quot;&#125;, &apos;at&apos;: &#123;&apos;isAtAll&apos;: true&#125; &#125;&quot;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/08/26/aGcRtfbJewkIu1j.png" alt="lftp.png"></p><p>在这里有一点非常需要注意：set net:limit-rate 500000:500000 这个参数就是lftp进行限速的命令。网上找了好多文章，他们在 set net:limit-rate 500000,500000用的是,号 经过我实测和man lftp查看参数，这里用的是：希望大家少采坑。</p>]]></content>
    
    <summary type="html">
    
      &lt;!--[TOC]--&gt;
&lt;h2 id=&quot;背景介绍&quot;&gt;&lt;a href=&quot;#背景介绍&quot; class=&quot;headerlink&quot; title=&quot;背景介绍&quot;&gt;&lt;/a&gt;背景介绍&lt;/h2&gt;&lt;p&gt;因为备份数据的不断扩大，需要把现网备份的数据（2T左右）传回到本地进行异地保存。但是2T太大了，需要进行压缩，这里采用了3G一个压缩包的方式。以下是压缩脚本&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/08/15/hello-world/"/>
    <id>http://yoursite.com/2019/08/15/hello-world/</id>
    <published>2019-08-15T09:10:37.098Z</published>
    <updated>2019-08-26T09:28:16.331Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
